% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/postScientificObjects.R
\name{postScientificObjects}
\alias{postScientificObjects}
\title{postScientificObjects}
\usage{
postScientificObjects(
  rdfType,
  alias,
  geometry,
  experiment,
  isPartOf,
  year,
  properties
)
}
\arguments{
\item{rdfType}{character, the rdfType of the scientific object ex: http://www.opensilex.org/vocabulary/oeso#Plot}

\item{alias}{character, give an alias to the scientific object}

\item{geometry}{character, give the geometry of this scientific object. For example a plot can be : "POLYGON((0 0, 10 0, 10 10, 0 10, 0 0))"}

\item{experiment}{character, uri of the experiment of the scientific object}

\item{isPartOf}{character, a scientific object the scientific object is part of ???}

\item{year}{character, the year of the scientific object}

\item{properties}{list, a list for example: list(rdfType = "http://xmlns.com/foaf/0.1/Agent", 
relation = "http://www.opensilex.org/vocabulary/2018#hasContact", 
value = "http://www.opensilex.org/demo/id/agent/marie_dupond")}
}
\value{
WSResponse object
}
\description{
send a scientific object to the web service
}
\details{
You have to execute the \code{\link{connectToPHISWS}} function first to have access to the web
service
}
\examples{
\donttest{
connectToPHISWS(apiID="ws_private",
               url = "http://www.opensilex.org/openSilexAPI/rest/",
               username="guest@opensilex.org",
               password="guest")
  postScientificObjects(
   rdfType = "http://www.opensilex.org/vocabulary/oeso#Spectrometer",
   alias="objectAlias",
   geometry="POLYGON((0 0, 10 0, 10 10, 0 10, 0 0))",
   experiment="http://www.opensilex.org/demo/DIA2017-1",
   isPartOf="string",
   properties=list(rdfType = "http://xmlns.com/foaf/0.1/Agent",
   relation = "http://www.opensilex.org/vocabulary/2018#hasContact",
   value = "http://www.opensilex.org/demo/id/agent/marie_dupond"),
   year=2009)
   }
}
\seealso{
http://docs.brapi.apiary.io/#introduction/url-structure

You have to install the opensilexWSClientR before running any 
         request on PHIS web service.
}
