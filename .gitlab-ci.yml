# you can delete this line if you're not using Docker
image: debian:9

variables:
  R_REPOS: "http://cloud.r-project.org/"

# install R and http dependencies
before_script:
   - apt update
   - apt install libssl-dev libcurl4-openssl-dev -y
   - apt install r-base -y
   - R -e 'install.packages("devtools", repos="http://cloud.r-project.org/")'
   - R -e 'install.packages("remotes", repos="http://cloud.r-project.org/")'
   - R -e 'install.packages("covr", repos="http://cloud.r-project.org/")'
   - R -e 'install.packages("knitr", repos="http://cloud.r-project.org/")'
   - R -e 'install.packages("ggplot2", repos="http://cloud.r-project.org/")'
   - R -e 'install.packages("tidyr", repos="http://cloud.r-project.org/")'
   - R -e 'install.packages("dplyr", repos="http://cloud.r-project.org/")'
   - R -e 'install.packages("lubridate", repos="http://cloud.r-project.org/")'
   - R -e 'install.packages("urltools", repos="http://cloud.r-project.org/")'
  
buildbinary:
  stage: build
  script:
    - r -e 'devtools::build(binary = TRUE)'
    
checkerrors:
  stage: check
  script:
    - r -e 'if (!identical(devtools::check(document = FALSE, args = "--no-tests")[["errors"]], character(0))) stop("Check with Errors")'

checkwarnings:
  stage: check
  script:
    - r -e 'if (!identical(devtools::check(document = FALSE, args = "--no-tests")[["warnings"]], character(0))) stop("Check with Warnings")'

checknotes:
  stage: check
  script:
    - r -e 'if (!identical(devtools::check(document = FALSE, args = "--no-tests")[["notes"]], character(0))) stop("Check with Notes")'

unittests:
  stage: test
  script:
    - r -e 'if (any(as.data.frame(devtools::test())[["failed"]] > 0)) stop("Some tests failed.")'

codecov:
  stage: test
  script:
    - r -e 'covr::codecov()'

install_from_github:
  stage: deploy
  script:
    - R -e 'remotes::install_github("OpenSILEX/phisWSClientR", build_vignettes=TRUE,ref="v1.3.0",upgrade ="always")'

install:
  stage: deploy
  script:
    - r -e 'devtools::install()'

deployonotherrepository:
  stage: deploy
  script:
    - git remote add upstream https://github.com/niio972/phisWSClientR
    - git fetch upstream
    - git push upstream master
  when: manual
  only:
    - master
