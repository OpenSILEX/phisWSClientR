# you can delete this line if you're not using Docker
image: rocker/verse:3.4.4

# order of the different steps
stages:
  - build
  - document
  - check
  - test
  - deploy

# define system envrionment variables
variables:
  R_REPOS: "http://cloud.R-project.org/"
  R_LIBS_USER: "$CI_PROJECT_DIR/ci/lib"
  R_TMP_USER: "$CI_PROJECT_DIR/ci/tmp"
  R_CHECK_NOTES : "false"

# install R dependencies
before_script:
   - mkdir -p $R_LIBS_USER
   - R -e 'devtools::install_deps(dep=TRUE,lib=Sys.getenv("R_LIBS_USER"))'
   
# Cache R directories in between jobs
cache:
    paths:
      - $R_LIBS_USER
      
buildbinary:
  stage: build
  script:
    - R -e 'devtools::build(binary = TRUE)'

checkerrors:
  when: manual
  stage: check
  script:
    - R -e 'try(if (!identical(devtools::check(document = FALSE, args = "--no-tests")[["errors"]], character(0))) stop("Check with Errors") else print("No Errors"), silent = TRUE)'

checkwarnings:
  when: manual
  stage: check
  script:
    - R -e 'try(if (!identical(devtools::check(document = FALSE, args = "--no-tests")[["warnings"]], character(0))) stop("Check with Warnings") else print("No Warnings"), silent = TRUE)'

checknotes:
  when: manual
  stage: check
  script:
    - R -e 'try(if (!identical(devtools::check(document = FALSE, args = "--no-tests")[["notes"]], character(0))) system("R_CHECK_NOTES =\"true\""), silent = TRUE)'
    - echo $R_CHECK_NOTES 
    - if [ $R_CHECK_NOTES = "true" ] ; then exit 1 ; fi
unittests:
  when: manual
  stage: test
  script:
    - R -e 'if (any(as.data.frame(devtools::test())[["failed"]] > 0)) stop("Some tests failed.")'

codecov:
  when: manual
  stage: test
  script:
    - R -e 'covr::codecov()'

install_from_github:
  stage: test
  script:
    - R -e 'remotes::install_github("OpenSILEX/phisWSClientR", build_vignettes=TRUE,ref="v1.3.0")'

install:
  when: manual
  stage: deploy
  script:
    - R -e 'devtools::install()'

deployonotherrepository:
  stage: deploy
  script:
    - git remote add upstream https://github.com/niio972/phisWSClientR
    - git fetch upstream
    - git push upstream master
  when: manual
  only:
    - master
