# you can delete this line if you're not using a specific Docker image
#get more information at https://hub.docker.com/r/rocker/verse/
image: ubuntu:18.04

# order of the different jobs
stages:
  - build
  - document
  - check
  - test
  - deploy

# define system environment variables
variables:
  R_REPOS: "http://cloud.R-project.org/"
  R_LIBS : ".cache/install_deps" # dependencies cache
  R_ENVIRON : "$CI_PROJECT_DIR/.Renviron" # R environment cache
  R_TMP_USER: "$CI_PROJECT_DIR/tmp"  # temporary directory

# Cache R directories in between jobs
cache:
    paths:
      - ".cache/install_deps"
      - ".Renviron"

# load packages
before_script:
  - mkdir -p $R_LIBS
  - chmod -R 777 $R_LIBS
  - echo 'R_LIBS_USER="$R_LIBS"' > .Renviron
  - R -e '.libPaths()'
  - R -e 'options(repos =c(CRAN=Sys.getenv("R_REPOS")));devtools::install_deps(dependencies = TRUE,lib = Sys.getenv("R_LIBS"), upgrade = FALSE)'

# create an archive 
buildBinary:3.4:
  image: rocker/verse:3.4
  stage: build
  script:
   - R -e 'devtools::build(binary = TRUE)'

checkErrors:3.4:
  image: rocker/verse:3.4
  stage: check
  script:
    - mkdir -p $R_TMP_USER
    - R -e 'tryCatch(if (!identical(devtools::check(document = FALSE, args = "--no-tests")[["errors"]], character(0))) system("mkdir -p $R_TMP_USER;touch $R_TMP_USER/errorsFail"), error = function(e) system("touch $R_TMP_USER/errorsFail"))'
    - if [ -f $R_TMP_USER/errorsFail ]; then echo "Check Errors"; exit 1 ; else echo "No Errors"; fi
  needs: ["buildBinary:3.4"]
    
checkWarnings:3.4:
  image: rocker/verse:3.4
  stage: check
  script:
    - mkdir -p $R_TMP_USER
    - R -e 'tryCatch(if (!identical(devtools::check(document = FALSE, args = "--no-tests")[["warnings"]], character(0))) system("mkdir -p $R_TMP_USER;touch $R_TMP_USER/warningsFail"), error = function(e) system("touch $R_TMP_USER/warningsFail"))'
    - if [ -f $R_TMP_USER/warningsFail ]; then echo "Check Warnings"; exit 1 ; else echo "No Warnings"; fi
  needs: ["buildBinary:3.4"]
    
checkNotes:3.4:
  image: rocker/verse:3.4
  allow_failure: true
  stage: check
  script:
    - mkdir -p $R_TMP_USER
    - R -e 'tryCatch(if (!identical(devtools::check(document = FALSE, args = "--no-tests")[["notes"]], character(0))) system("mkdir -p $R_TMP_USER;touch $R_TMP_USER/notesFail"), error = function(e) system("touch $R_TMP_USER/notesFail"))'
    - if [ -f $R_TMP_USER/notesFail ]; then echo "Check Notes"; exit 1 ; else echo "No Notes"; fi
  needs: ["buildBinary:3.4"]
    
unitTests:3.4:
  image: rocker/verse:3.4
  when: manual
  stage: test
  script:
    - mkdir -p $R_TMP_USER
    - R -e 'if (any(as.data.frame(devtools::test())[["failed"]] > 0)) system("touch $R_TMP_USER/testsFail")
    - if [ -f $R_TMP_USER/testsFail ]; then echo "Check Tests"; exit 1 ; else echo "Tests passed"; fi    
  needs: ["checkErrors:3.4"]  
    
    
installLocally:3.4:
  image: rocker/verse:3.4
  stage: test
  script:
    - R -e 'options(repos =c(CRAN=Sys.getenv("R_REPOS")));devtools::install(build_vignettes=TRUE,dependencies = TRUE)'
  needs: ["checkErrors:3.4"]
  

    
buildBinary:3.5:
  image: rocker/verse:3.5
  stage: build
  script:
   - R -e 'devtools::build(binary = TRUE)'

    
checkErrors:3.5:
  image: rocker/verse:3.5
  stage: check
  script:
    - mkdir -p $R_TMP_USER
    - R -e 'tryCatch(if (!identical(devtools::check(document = FALSE, args = "--no-tests")[["errors"]], character(0))) system("mkdir -p $R_TMP_USER;touch $R_TMP_USER/errorsFail"), error = function(e) system("touch $R_TMP_USER/errorsFail"))'
    - if [ -f $R_TMP_USER/errorsFail ]; then echo "Check Errors"; exit 1 ; else echo "No Errors"; fi
  needs: ["buildBinary:3.5"]
    
checkWarnings:3.5:
  image: rocker/verse:3.5
  stage: check
  script:
    - mkdir -p $R_TMP_USER
    - R -e 'tryCatch(if (!identical(devtools::check(document = FALSE, args = "--no-tests")[["warnings"]], character(0))) system("mkdir -p $R_TMP_USER;touch $R_TMP_USER/warningsFail"), error = function(e) system("touch $R_TMP_USER/warningsFail"))'
    - if [ -f $R_TMP_USER/warningsFail ]; then echo "Check Warnings"; exit 1 ; else echo "No Warnings"; fi
  needs: ["buildBinary:3.5"]
    
checkNotes:3.5:
  image: rocker/verse:3.5
  allow_failure: true
  stage: check
  script:
    - mkdir -p $R_TMP_USER
    - R -e 'tryCatch(if (!identical(devtools::check(document = FALSE, args = "--no-tests")[["notes"]], character(0))) system("mkdir -p $R_TMP_USER;touch $R_TMP_USER/notesFail"), error = function(e) system("touch $R_TMP_USER/notesFail"))'
    - if [ -f $R_TMP_USER/notesFail ]; then echo "Check Notes"; exit 1 ; else echo "No Notes"; fi
  needs: ["buildBinary:3.5"]
    
unitTests:3.5:
  image: rocker/verse:3.5
  when: manual
  stage: test
  script:
    - mkdir -p $R_TMP_USER
    - R -e 'if (any(as.data.frame(devtools::test())[["failed"]] > 0)) system("touch $R_TMP_USER/testsFail")
    - if [ -f $R_TMP_USER/testsFail ]; then echo "Check Tests"; exit 1 ; else echo "Tests passed"; fi    
  needs: ["checkErrors:3.5"]
    
    
        
installLocally:3.5:
  image: rocker/verse:3.5
  stage: test
  script:
    - R -e 'options(repos =c(CRAN=Sys.getenv("R_REPOS")));devtools::install(build_vignettes=TRUE,dependencies = TRUE)'
  needs: ["checkErrors:3.5"]
    

buildBinary:3.6:
  image: rocker/verse:3.6
  stage: build
  script:
   - R -e 'devtools::build(binary = TRUE)'

checkErrors:3.6:
  image: rocker/verse:3.6
  stage: check
  script:
    - mkdir -p $R_TMP_USER
    - R -e 'tryCatch(if (!identical(devtools::check(document = FALSE, args = "--no-tests")[["errors"]], character(0))) system("mkdir -p $R_TMP_USER;touch $R_TMP_USER/errorsFail"), error = function(e) system("touch $R_TMP_USER/errorsFail"))'
    - if [ -f $R_TMP_USER/errorsFail ]; then echo "Check Errors"; exit 1 ; else echo "No Errors"; fi
  needs: ["buildBinary:3.6"]
    
checkWarnings:3.6:
  image: rocker/verse:3.6
  stage: check
  script:
    - mkdir -p $R_TMP_USER
    - R -e 'tryCatch(if (!identical(devtools::check(document = FALSE, args = "--no-tests")[["warnings"]], character(0))) system("mkdir -p $R_TMP_USER;touch $R_TMP_USER/warningsFail"), error = function(e) system("touch $R_TMP_USER/warningsFail"))'
    - if [ -f $R_TMP_USER/warningsFail ]; then echo "Check Warnings"; exit 1 ; else echo "No Warnings"; fi
  needs: ["buildBinary:3.6"]
    
checkNotes:3.6:
  image: rocker/verse:3.6
  allow_failure: true
  stage: check
  script:
    - mkdir -p $R_TMP_USER
    - R -e 'tryCatch(if (!identical(devtools::check(document = FALSE, args = "--no-tests")[["notes"]], character(0))) system("mkdir -p $R_TMP_USER;touch $R_TMP_USER/notesFail"), error = function(e) system("touch $R_TMP_USER/notesFail"))'
    - if [ -f $R_TMP_USER/notesFail ]; then echo "Check Notes"; exit 1 ; else echo "No Notes"; fi
  needs: ["buildBinary:3.6"]
    
#unitTests:3.6:
#  image: rocker/verse:3.6
#  when: manual
#  stage: test
#  script:
#    - mkdir -p $R_TMP_USER
#    - R -e 'if (any(as.data.frame(devtools::test())[["failed"]] > 0)) system("touch $R_TMP_USER/testsFail")
#    - if [ -f $R_TMP_USER/testsFail ]; then echo "Check Tests"; exit 1 ; else echo "Tests passed"; fi    
#  needs: ["checkErrors:3.6"]


#codeCoverage:3.6:
#  image: rocker/verse:3.6
#  allow_failure: true
#  when: manual
#  stage: test
#  script:
#    - R -e 'covr::codecov()'
#  needs: ["unitTests:3.6"]


installLocally:3.6:
  image: rocker/verse:3.6
  stage: test
  script:
    - R -e 'options(repos =c(CRAN=Sys.getenv("R_REPOS")));devtools::install(build_vignettes=TRUE,dependencies = TRUE)'
  needs: ["checkErrors:3.6"]
